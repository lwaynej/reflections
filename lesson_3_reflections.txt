When would you want to use a remote repository rather than keeping all your work
local?

	Using a remote repository allows sharing with others. Depenending on where it is
	stored a remote repository can also provide backup in case something happens to the
	local repository.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    If you are in the middle of something, depending on the nature of the
	remote chagnes, you might want to finish your change before you merge
	in the remote or you may want to pull in the changes because it affects
	that way you finish your code.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

	A clone is a copy of a remote repository. A fork is the github version
	of a clone. It copies the repository but maintains a reference to the
	original on git hub. A branch is a name that references a revision and
	all of its ancestors. Changes can be committed to a branch. Committing
	changes to the branch moves the name to the revision of the new commit.

	Branches allow different paths of development within the same repository.
	They allow you to add feature or experiment without immediately affecting
	other branches.
	Clones allow you to copy of a remote repository (including branches) and
	allow collaboration. Each person managers there own local repository.
	When their changes are ready they share them but 'pushing' them to the
	remote repository.
	A fork is similar to a clone except that the gitHub maintains information
	about where the clone came from. This could be used to create a different
	version of something shared on git hub.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    A locally stored copy of the last known state of the remote repositories
    allows doing things off line. We can check where things came from and
    see the history of things that others have checked in. It also allows us to
    merge our changes into the remote copy without having access to the remote.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Without git Hub we could still use a remote Git repository and communicate
    via email. I am not sure that anything would be easier or harder. The Web
    interface on GitHub allows you to look at the changes without having to 'pull'
    them, this might be easier for a small project or a small set of changes.
    With a large number of changes you might still need to pull the branch with
    the changes so that you can use code navigation tools to understand the
    impact of the changes.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Making changes in a branch insulates your current work with the work on th
    main branch. You can share your work with others while still maintianing
    control on when the updates of others are merged into your branch. If you are
    working on the main branch you cannot share your changes without pulling
    in the changes already shared by others. Everyone else is also forced
    to take your changes when they update.

    Making changes on the main branch is not as complicated in that there is less
    merging.